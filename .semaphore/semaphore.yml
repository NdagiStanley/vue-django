version: v1.0
name: First pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Lint
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: 'Job #1'
          commands:
            - sudo apt-get update
            - sudo apt install software-properties-common -y
            - 'sudo add-apt-repository -y ppa:deadsnakes/ppa && curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -'
            - sudo apt-get update && sudo apt-get install python3.7 nodejs -y
            - sudo npm install -g vue-cli && expect vue-cli-interaction.exp && cd my-project
            - sudo npm install
            - 'curl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3.7 && sudo pip install -r requirements.txt'
  - name: Unit tests
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: Unit tests 1/3
          commands:
            - npm run build && sudo python3.7 format_index_html.py && sudo python3.7 manage.py test
            - coveralls
            - 'if [[ "$BRANCH_NAME" =~ ^(v2-d2|v1-d1|v2-d1)$ ]]; then docker build -t stanmd/vue-django . && docker push stanmd/vue-django:$BRANCH_NAME; elif [ "$BRANCH_NAME" == develop ]; then docker build -t stanmd/vue-django . && docker push stanmd/vue-django; else echo "Not pushing to DockerHub"; fi'
        - name: Unit tests 2/3
          commands:
            - npm run build && sudo python3.7 format_index_html.py && sudo python3.7 manage.py test
            - 'curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter'
            - chmod +x cc-test-reporter
            - ./cc-test-reporter before-build && coverage xml
            - ./cc-test-reporter after-build -t coverage.py
